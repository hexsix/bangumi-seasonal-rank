---
import Hamburger from "../icons/Hamburger.astro";
import Moon from "../icons/Moon.astro";
import Sun from "../icons/Sun.astro";

const { currentSeasonId, availableSeasonIdList } = Astro.props;
const currentPath = Astro.url.pathname;

export function getTitle(seasonId: number) {
    const season_id = String(seasonId);
    const year = season_id.slice(2, 4);
    const season = season_id.slice(4, 6);
    return `Bangumi ${year}年${season}月新番排行`;
}

export function getSeasonName(seasonId: number) {
    const season_id = String(seasonId);
    const year = season_id.slice(2, 4);
    const season = season_id.slice(4, 6);
    return `${year}年${season}月`;
}

let title = "Bangumi 新番排行";
if (currentSeasonId) {
    title = getTitle(currentSeasonId);
}
---

<!-- 导航栏 -->
<header
    class="bg-white dark:bg-[#343536] shadow-sm top-0 z-50"
>
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center min-h-16">
            <!-- Logo -->
            <div class="flex-1 flex md:flex-none items-center space-x-2">
                <span class="text-xl font-bold text-gray-800 dark:text-white"
                    >{title}</span
                >
            </div>

            <!-- 桌面导航 -->
            <nav
                class="hidden md:flex flex-1 justify-end items-center space-x-4"
            >
                {
                    availableSeasonIdList
                        .slice(0, 5)
                        .map((seasonId: number) => (
                            <a
                                href={`/${seasonId}/`}
                                aria-current={currentPath === `/${seasonId}/` ? 'page' : undefined}
                                class={`${currentPath === `/${seasonId}/`
                                    ? 'bg-blue-50 dark:bg-blue-500/20 text-gray-800 dark:text-gray-100'
                                    : 'bg-transparent text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-white/10'} rounded-md px-3 py-1 text-xs lg:text-sm transition-colors`}
                            >
                                {getSeasonName(seasonId)}
                            </a>
                        ))
                }
                <a
                    href="/more/"
                    aria-current={currentPath.startsWith('/more') ? 'page' : undefined}
                    class={`${currentPath.startsWith('/more')
                        ? 'bg-blue-50 dark:bg-blue-500/20 text-gray-800 dark:text-gray-100'
                        : 'bg-transparent text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-white/10'} rounded-md px-3 py-1 text-xs lg:text-sm transition-colors`}
                    >更多</a
                >
                <button
                    data-theme-toggle
                    class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 w-10 h-10 flex items-center justify-center"
                >
                    <span class="block dark:hidden"><Moon /></span>
                    <span class="hidden dark:block"><Sun /></span>
                </button>
            </nav>

            <!-- 移动端汉堡菜单按钮 -->
            <button
                id="menu-toggle"
                class=" text-2xlblock md:hidden text-gray-600 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 border-none bg-transparent shadow-none outline-none"
            >
                <Hamburger />
            </button>
        </div>
    </div>

    <!-- 移动端导航菜单 -->
    <div
        id="mobile-menu"
        class="hidden md:hidden bg-white dark:bg-[#343536] py-4 px-4 border-t"
    >
        <div class="flex flex-col space-y-4">
            {
                availableSeasonIdList.slice(0, 6).map((seasonId: number) => (
                    <a
                        href={`/${seasonId}/`}
                        class="text-gray-600 dark:text-gray-300 dark:hover:text-blue-400 hover:text-blue-600 text-sm"
                    >
                        {getSeasonName(seasonId)}
                    </a>
                ))
            }
            <a
                href="/more/"
                class="text-gray-600 dark:text-gray-300 dark:hover:text-blue-400 hover:text-blue-600 text-sm"
                >更多季度</a
            >
            <button
                data-theme-toggle
                class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 text-sm flex"
            >
                <a href="#" class="flex flex-wrap gap-1">
                    <span class="flex">更改主题</span>
                    <span class="block dark:hidden"><Moon /></span>
                    <span class="hidden dark:block"><Sun /></span>
                </a>
            </button>
        </div>
    </div>
</header>

<script>
    const menuToggle = document.getElementById("menu-toggle");
    const mobileMenu = document.getElementById("mobile-menu");

    menuToggle?.addEventListener("click", () => {
        mobileMenu?.classList.toggle("hidden");
    });
</script>

<script is:inline>
    (() => {
        const key = "theme";
        const root = document.documentElement;

        const getInitial = () => {
            try {
                const ls = localStorage.getItem(key);
                if (ls === "light" || ls === "dark") return ls;
            } catch (_) {}
            return window.matchMedia("(prefers-color-scheme: dark)").matches
                ? "dark"
                : "light";
        };

        const apply = (theme) => {
            if (theme === "dark") {
                root.classList.add("dark");
            } else {
                root.classList.remove("dark");
            }
        };

        // init
        apply(getInitial());

        const setTheme = (theme) => {
            apply(theme);
            try {
                localStorage.setItem(key, theme);
            } catch (_) {}
        };

        document.querySelectorAll("[data-theme-toggle]").forEach((btn) => {
            if (btn.dataset.bound) return;
            btn.dataset.bound = "1";
            btn.addEventListener("click", () => {
                const next = root.classList.contains("dark") ? "light" : "dark";
                setTheme(next);
            });
        });
    })();
</script>
